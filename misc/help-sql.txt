INSERT INTO base_managecomp SELECT row_number() OVER (ORDER BY  management_comp) n, management_comp FROM (SELECT management_comp FROM object GROUP BY management_comp) AS mc;
#----------------------------------------------------------------------------------------------------------------------
UPDATE object SET management_comp = base_managecomp.id FROM base_managecomp WHERE management_comp = base_managecomp.comp_name;
#---------------------------------------------------------------------------------------------------------------------- 
pg_dump -U postgres -t base_managecomp tmp_base | psql -U postgres -d mlift
#----------------------------------------------------------------------------------------------------------------------
CREATE TABLE public.test
(
  id serial PRIMARY KEY,
  management_comp text,
  obj_area character varying,
  obj_aperture integer,
  obj_str character varying,
  obj_buid character varying,
  obj_build_housing integer,
  obj_par integer,
  obj_number character varying,
  obj_factory_number character varying,
  obj_inspection date,
  obj_type character varying,
  obj_carrying integer,
  obj_manufacturer character varying,
  obj_manufacture date,
  obj_exp_start character varying,
  obj_communication character varying,
)
WITH (
    OIDS=FALSE
);
ALTER TABLE public.test
    OWNER TO postgres;
#----------------------------------------------------------------------------------------------------------------------
COPY temp_object FROM '/tmp/base.csv' WITH CSV HEADER DELIMITER ';';
#----------------------------------------------------------------------------------------------------------------------
INSERT INTO temp_object (id,manage_comp_id,obj_area_id,obj_aperture,obj_str_id,obj_build,obj_build_housing,obj_par,obj_number,obj_factory_number,obj_inspection,obj_type_id,obj_carrying,obj_manufacturer_id,obj_manufacture,obj_exp_start,obj_communication) SELECT id, management_comp::integer, obj_area::integer, obj_aperture, obj_str::integer, obj_buid, obj_build_housing, obj_par, obj_number, obj_factory_number, obj_inspection, obj_type::integer, obj_carrying, obj_manufacturer::integer, to_timestamp(obj_manufacture::text,'YYYY-MM-DD'), to_timestamp(obj_exp_start::text,'DD-MM-YYYY'), obj_communication::boolean FROM test;